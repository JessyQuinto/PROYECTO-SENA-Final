#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üìù Validating commit message format..."

# Read the commit message
commit_message=$(cat $1)

# Check if commit message follows conventional commits format
# Pattern: type(scope): description
# Examples: feat: add new feature, fix(auth): resolve login issue, docs: update README
conventional_pattern="^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}"

if echo "$commit_message" | grep -qE "$conventional_pattern"; then
  echo "‚úÖ Commit message follows conventional format"
else
  echo "‚ùå Invalid commit message format!"
  echo ""
  echo "Please use conventional commits format:"
  echo "  type(scope): description"
  echo ""
  echo "Types:"
  echo "  feat:     New feature"
  echo "  fix:      Bug fix"
  echo "  docs:     Documentation changes"
  echo "  style:    Code style changes (formatting, etc.)"
  echo "  refactor: Code refactoring"
  echo "  test:     Adding or updating tests"
  echo "  chore:    Maintenance tasks"
  echo "  perf:     Performance improvements"
  echo "  ci:       CI/CD changes"
  echo "  build:    Build system changes"
  echo "  revert:   Revert previous commit"
  echo ""
  echo "Examples:"
  echo "  feat: add user authentication"
  echo "  fix(auth): resolve login validation issue"
  echo "  docs: update API documentation"
  echo ""
  echo "Current message: $commit_message"
  exit 1
fi