name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      # 1. Clonar el repo
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # 2. Usar Node 20
      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 3. Instalar dependencias del frontend
      - name: Install Frontend Dependencies
        run: |
          npm install --no-audit --no-fund
        working-directory: frontend
        env:
          NPM_CONFIG_WORKSPACES: "false"
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}

      # 4. Build Frontend
      - name: Build Frontend
        run: npm run build
        working-directory: frontend
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}

      # 5. Verificar que el build existe
      - name: Verify build artifact
        run: |
          echo "Contenido de frontend/dist:"
          ls -la frontend/dist || true

      # 6. Deploy a Azure Static Web App
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_BEACH_039140210 }}
          action: "upload"
          app_location: "frontend"
          api_location: ""
          output_location: ""
          app_artifact_location: "frontend/dist"
          skip_app_build: true
