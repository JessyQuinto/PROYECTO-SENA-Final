name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Use Node 20 for Frontend build
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Prepare isolated build workspace
        run: |
          rm -rf frontend
          mkdir -p frontend
          cp -R Frontend/. frontend/

      - name: Clean install dependencies (Frontend isolated)
        run: |
          echo "Cleaning isolated node_modules and lockfile"
          rm -rf node_modules package-lock.json
          echo "Disabling npm workspaces and using nested install strategy"
          npm config set workspaces false
          npm config set install-strategy nested
          echo "Installing Frontend deps"
          npm install --no-audit --no-fund --workspaces=false --install-strategy=nested
        working-directory: frontend
        env:
          NPM_CONFIG_WORKSPACES: "false"
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}

      - name: Fix Rollup optional deps
        run: npm rebuild rollup --force || true
        working-directory: frontend

      - name: Build Frontend
        run: npm run build
        working-directory: frontend
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}

      - name: Verify build artifact exists
        run: |
          echo "Listing contents of frontend and dist before deploy"
          ls -la frontend || true
          ls -la frontend/dist || true

      - name: Sanity check deployment token presence
        shell: bash
        run: |
          if [ -z "${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_BEACH_039140210 }}" ]; then
            echo "ERROR: Deployment token secret is empty or not defined." >&2
            exit 1
          fi
          echo "Deployment token is present."

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_BEACH_039140210 }}
          action: "upload"
          app_location: "frontend/dist"
          api_location: ""
          production_branch: "main"
          deployment_environment: "production"
          skip_app_build: true

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_BEACH_039140210 }}
          action: "close"
          app_location: "frontend"
