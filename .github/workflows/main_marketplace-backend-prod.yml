# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - marketplace-backend-prod

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Debug workspace structure
        run: |
          echo "üîç Debugging workspace structure..."
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Backend directory contents:"
          ls -la Backend/
          echo "Backend package.json:"
          cat Backend/package.json

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: npm
          cache-dependency-path: Backend/package-lock.json

      - name: Clear npm cache and install dependencies
        run: |
          echo "Clearing npm cache and installing dependencies..."
          cd Backend
          echo "Current directory: $(pwd)"
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
          
          # Clear npm cache to avoid any conflicts
          npm cache clean --force
          
          # Try to install dependencies, if it fails, regenerate package-lock.json
          if ! npm ci --ignore-scripts --no-audit --no-fund --verbose; then
            echo "npm ci failed, trying to regenerate package-lock.json..."
            rm -f package-lock.json
            npm install --ignore-scripts --no-audit --no-fund --verbose
          fi
          
          echo "Dependencies installed successfully"
        env:
          CI: true
          HUSKY: 0

      - name: Clean and build the optimized application
        run: |
          echo "Cleaning and building the optimized application..."
          cd Backend
          echo "Current directory: $(pwd)"
          echo "Available scripts:"
          npm run
          echo "Cleaning previous build..."
          rm -rf dist || true
          echo "Starting optimized build..."
          npm run build:optimized
          echo "Build completed successfully"
        env:
          CI: true
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "Verifying build output..."
          cd Backend
          if [ -f "dist/index.optimized.js" ]; then
            echo "‚úÖ Build output verified: index.optimized.js exists"
            ls -la dist/
            echo "Build file size:"
            du -h dist/index.optimized.js
          else
            echo "‚ùå Build output verification failed: index.optimized.js not found"
            echo "Dist directory contents:"
            ls -la dist/ || echo "Dist directory does not exist"
            echo "Current directory contents:"
            ls -la
            exit 1
          fi

      - name: Prune dev dependencies
        run: |
          echo "Pruning development dependencies..."
          cd Backend
          npm prune --omit=dev --no-audit
          echo "Development dependencies pruned successfully"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: backend-app
          path: Backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: backend-app
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'marketplace-backend-prod'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6D9D691DC7CA400DB82578B627BAC9AA }}