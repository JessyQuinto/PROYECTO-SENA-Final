name: Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/**'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: Frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./Frontend
      run: npm ci --ignore-scripts
      env:
        CI: true
        HUSKY: 0
      
    - name: Run tests
      working-directory: ./Frontend
      run: npm run test:run
      
    - name: Build application
      working-directory: ./Frontend
      run: npm run build
      
    - name: Generate changelog
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version-file: './Frontend/package.json'
        version-path: 'version'
        preset: 'angular'
        tag-prefix: 'v'
        output-file: 'CHANGELOG.md'
        release-count: 10
        skip-on-empty: true
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      if: steps.changelog.outputs.skipped == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
        draft: false
        prerelease: false
        
    - name: Upload build artifacts to release
      uses: actions/upload-release-asset@v1
      if: steps.changelog.outputs.skipped == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Frontend/dist.zip
        asset_name: build-${{ steps.changelog.outputs.tag }}.zip
        asset_content_type: application/zip
        
    - name: Create build archive
      if: steps.changelog.outputs.skipped == 'false'
      working-directory: ./Frontend
      run: zip -r dist.zip dist/
