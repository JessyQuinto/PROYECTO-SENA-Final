EVIDENCIA DE DESEMPE√ëO: GA7-220501096-AA2-EV01
CODIFICACI√ìN DE M√ìDULOS DEL SOFTWARE SEG√öN REQUERIMIENTOS DEL PROYECTO

=================================================================
INFORMACI√ìN DEL REPOSITORIO
=================================================================

Enlace del repositorio:
https://github.com/JessyQuinto/PROYECTO-SENA-Final.git

Rama principal: main
Estudiante: Jessy Quinto
Proyecto: Tesoros Choc√≥ - Marketplace de Artesan√≠as
Fecha de entrega: Septiembre 2025

=================================================================
TECNOLOG√çAS UTILIZADAS
=================================================================

FRONTEND:
- React 18.3.1
- TypeScript 5.4.0
- Vite (Build tool)
- Tailwind CSS
- React Router Dom

BACKEND:
- Node.js
- Express.js 4.19.0
- TypeScript 5.4.0
- Supabase Client

BASE DE DATOS:
- PostgreSQL (via Supabase)
- Supabase Storage (para archivos)

HERRAMIENTAS DE DESARROLLO:
- Git & GitHub
- ESLint & Prettier
- Vitest (Testing)
- Bun/npm (Package manager)

=================================================================
FUNCIONALIDADES IMPLEMENTADAS
=================================================================

‚úÖ INSERCI√ìN (CREATE):
- Registro de usuarios (compradores, vendedores)
- Creaci√≥n de productos con im√°genes
- Generaci√≥n de pedidos y √≥rdenes
- Creaci√≥n de categor√≠as de productos
- Evaluaciones y rese√±as

‚úÖ CONSULTA (READ):
- Listado de productos con filtros
- B√∫squeda avanzada por categor√≠as
- Consulta de √≥rdenes por usuario
- Dashboard administrativo
- Reportes de ventas

‚úÖ ACTUALIZACI√ìN (UPDATE):
- Modificaci√≥n de perfiles de usuario
- Actualizaci√≥n de estado de vendedores
- Gesti√≥n de inventario de productos
- Cambio de estados de √≥rdenes
- Actualizaci√≥n de configuraciones

‚úÖ ELIMINACI√ìN (DELETE):
- Eliminaci√≥n l√≥gica de productos
- Desactivaci√≥n de usuarios
- Cancelaci√≥n de √≥rdenes
- Limpieza de cach√©

=================================================================
ESTRUCTURA DEL PROYECTO
=================================================================

PROYECTO-SENA-main-main/
‚îú‚îÄ‚îÄ Frontend/           # Aplicaci√≥n web React
‚îú‚îÄ‚îÄ Backend/           # API REST con Express
‚îú‚îÄ‚îÄ supabase/         # Funciones serverless
‚îú‚îÄ‚îÄ Docs/             # Documentaci√≥n t√©cnica completa
‚îú‚îÄ‚îÄ package.json      # Configuraci√≥n workspace
‚îî‚îÄ‚îÄ README.md         # Documentaci√≥n principal

=================================================================
EST√ÅNDARES DE CODIFICACI√ìN APLICADOS
=================================================================

‚úÖ Variables: camelCase
   - vendedorEstado, nombreCompleto, fechaCreacion

‚úÖ Funciones: camelCase
   - getUserFromAuthHeader(), requireApprovedVendor()

‚úÖ Clases/Componentes: PascalCase
   - DatabaseDashboard, SupabaseConnectionPool

‚úÖ Archivos: kebab-case o PascalCase seg√∫n convenci√≥n
   - supabaseAdmin.ts, DatabaseDashboard.tsx

‚úÖ Constantes: UPPER_SNAKE_CASE
   - RATE_WINDOW_MS, MAX_CONNECTIONS

=================================================================
DOCUMENTACI√ìN T√âCNICA INCLUIDA
=================================================================

üìã Documentos en /Docs/:
- ARQUITECTURA.md    - Dise√±o del sistema
- BASE_DE_DATOS.md   - Esquema de la base de datos
- API.md             - Documentaci√≥n de endpoints
- BACKEND.md         - Configuraci√≥n del servidor
- FRONTEND.md        - Configuraci√≥n del cliente
- SECURITY.md        - Pol√≠ticas de seguridad
- TESTING.md         - Estrategias de pruebas
- DEPLOYMENT.md      - Gu√≠a de despliegue
- SUPABASE.md        - Configuraci√≥n de base de datos

=================================================================
INSTRUCCIONES PARA EJECUTAR EL PROYECTO
=================================================================

1. Clonar repositorio:
   git clone https://github.com/JessyQuinto/PROYECTO-SENA-Final.git

2. Instalar dependencias:
   bun install (o npm install)

3. Configurar variables de entorno:
   - Frontend/.env.local
   - Backend/.env

4. Ejecutar en desarrollo:
   - Backend: cd Backend && bun run dev
   - Frontend: cd Frontend && bun run dev

5. Acceder a la aplicaci√≥n:
   - Frontend: http://localhost:3000
   - Backend API: http://localhost:3001

=================================================================
