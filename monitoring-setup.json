{
  "monitoring": {
    "applicationInsights": {
      "sampling": {
        "percentage": 10,
        "maxTelemetryItemsPerSecond": 5
      },
      "customMetrics": [
        {
          "name": "ProductSearchLatency",
          "description": "Time taken for product search operations",
          "unit": "milliseconds"
        },
        {
          "name": "OrderCreationSuccess",
          "description": "Success rate of order creation",
          "unit": "percentage"
        },
        {
          "name": "CacheHitRatio",
          "description": "Cache hit ratio for backend operations",
          "unit": "percentage"
        },
        {
          "name": "DatabaseConnectionPool",
          "description": "Database connection pool utilization",
          "unit": "percentage"
        }
      ],
      "customEvents": [
        "ProductView",
        "ProductSearch", 
        "CartAdd",
        "OrderComplete",
        "UserRegistration",
        "PaymentFailure"
      ]
    },
    "alerts": [
      {
        "name": "High Response Time",
        "description": "Alert when average response time exceeds 3 seconds",
        "metric": "requests/duration",
        "threshold": 3000,
        "operator": "GreaterThan",
        "timeWindow": "PT5M",
        "frequency": "PT1M",
        "severity": "Warning",
        "actions": ["email", "slack"]
      },
      {
        "name": "High Error Rate",
        "description": "Alert when error rate exceeds 5%",
        "metric": "requests/failed",
        "threshold": 5,
        "operator": "GreaterThan", 
        "timeWindow": "PT5M",
        "frequency": "PT1M",
        "severity": "Critical",
        "actions": ["email", "sms", "slack"]
      },
      {
        "name": "High CPU Usage",
        "description": "Alert when CPU usage exceeds 80%",
        "metric": "performanceCounters/processorCpuPercentage",
        "threshold": 80,
        "operator": "GreaterThan",
        "timeWindow": "PT10M",
        "frequency": "PT5M",
        "severity": "Warning",
        "actions": ["email"]
      },
      {
        "name": "High Memory Usage",
        "description": "Alert when memory usage exceeds 85%",
        "metric": "performanceCounters/memoryAvailableBytes",
        "threshold": 85,
        "operator": "LessThan",
        "timeWindow": "PT10M", 
        "frequency": "PT5M",
        "severity": "Warning",
        "actions": ["email"]
      },
      {
        "name": "Database Connection Failures",
        "description": "Alert on database connection failures",
        "metric": "dependencies/failed",
        "threshold": 3,
        "operator": "GreaterThan",
        "timeWindow": "PT5M",
        "frequency": "PT1M", 
        "severity": "Critical",
        "actions": ["email", "sms"]
      },
      {
        "name": "Low Cache Hit Rate",
        "description": "Alert when cache hit rate drops below 70%",
        "metric": "customMetrics/CacheHitRatio",
        "threshold": 70,
        "operator": "LessThan",
        "timeWindow": "PT15M",
        "frequency": "PT5M",
        "severity": "Info",
        "actions": ["email"]
      }
    ],
    "dashboards": [
      {
        "name": "Application Performance",
        "widgets": [
          {
            "type": "metric",
            "title": "Response Time",
            "query": "requests | summarize avg(duration) by bin(timestamp, 5m)",
            "chartType": "line"
          },
          {
            "type": "metric", 
            "title": "Request Rate",
            "query": "requests | summarize count() by bin(timestamp, 5m)",
            "chartType": "column"
          },
          {
            "type": "metric",
            "title": "Error Rate", 
            "query": "requests | summarize error_rate=100.0*countif(success == false)/count() by bin(timestamp, 5m)",
            "chartType": "line"
          },
          {
            "type": "metric",
            "title": "Popular Products",
            "query": "customEvents | where name == 'ProductView' | summarize count() by tostring(customDimensions.productId) | top 10 by count_",
            "chartType": "pie"
          }
        ]
      },
      {
        "name": "Infrastructure Health",
        "widgets": [
          {
            "type": "metric",
            "title": "CPU Usage",
            "query": "performanceCounters | where name == 'processorCpuPercentage' | summarize avg(value) by bin(timestamp, 5m)",
            "chartType": "line"
          },
          {
            "type": "metric",
            "title": "Memory Usage", 
            "query": "performanceCounters | where name == 'memoryAvailableBytes' | summarize avg(value) by bin(timestamp, 5m)",
            "chartType": "line"
          },
          {
            "type": "metric",
            "title": "Database Response Time",
            "query": "dependencies | where type == 'SQL' | summarize avg(duration) by bin(timestamp, 5m)",
            "chartType": "line"
          }
        ]
      },
      {
        "name": "Business Metrics",
        "widgets": [
          {
            "type": "metric",
            "title": "Orders per Hour",
            "query": "customEvents | where name == 'OrderComplete' | summarize count() by bin(timestamp, 1h)",
            "chartType": "column"
          },
          {
            "type": "metric", 
            "title": "Revenue per Hour",
            "query": "customEvents | where name == 'OrderComplete' | summarize sum(todouble(customMeasurements.orderValue)) by bin(timestamp, 1h)",
            "chartType": "column"
          },
          {
            "type": "metric",
            "title": "User Registrations",
            "query": "customEvents | where name == 'UserRegistration' | summarize count() by bin(timestamp, 1d)",
            "chartType": "column"
          }
        ]
      }
    ]
  },
  "performance": {
    "lighthouseConfig": {
      "ci": {
        "collect": {
          "url": ["https://marketplace-frontend.azurestaticapps.net"],
          "numberOfRuns": 3,
          "settings": {
            "chromeFlags": "--headless --no-sandbox --disable-dev-shm-usage",
            "throttling": {
              "rttMs": 40,
              "throughputKbps": 10240,
              "requestLatencyMs": 0,
              "downloadThroughputKbps": 10240,
              "uploadThroughputKbps": 768,
              "cpuSlowdownMultiplier": 1
            }
          }
        },
        "assert": {
          "assertions": {
            "categories:performance": ["error", {"minScore": 0.8}],
            "categories:accessibility": ["error", {"minScore": 0.9}],
            "categories:best-practices": ["error", {"minScore": 0.9}],
            "categories:seo": ["error", {"minScore": 0.8}]
          }
        },
        "upload": {
          "target": "temporary-public-storage"
        }
      }
    },
    "webVitals": {
      "thresholds": {
        "LCP": 2.5,
        "FID": 100,
        "CLS": 0.1,
        "TTFB": 800,
        "FCP": 1.8
      },
      "reportingEndpoint": "/api/web-vitals"
    }
  },
  "logging": {
    "levels": {
      "production": "warn",
      "staging": "info", 
      "development": "debug"
    },
    "retention": {
      "applicationLogs": "7d",
      "httpLogs": "3d",
      "auditLogs": "90d"
    },
    "structuredLogging": {
      "format": "json",
      "fields": [
        "timestamp",
        "level",
        "message", 
        "userId",
        "requestId",
        "duration",
        "statusCode",
        "method",
        "path"
      ]
    }
  },
  "security": {
    "securityHeaders": {
      "Content-Security-Policy": "default-src 'self'; script-src 'self' 'unsafe-inline' *.azurestaticapps.net; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' *.supabase.co *.azurewebsites.net",
      "X-Content-Type-Options": "nosniff",
      "X-Frame-Options": "DENY",
      "X-XSS-Protection": "1; mode=block",
      "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
      "Referrer-Policy": "strict-origin-when-cross-origin",
      "Permissions-Policy": "geolocation=(self), microphone=(), camera=(), payment=(), usb=()"
    },
    "monitoring": {
      "suspiciousActivity": {
        "rapidRequests": {
          "threshold": 100,
          "timeWindow": "1m",
          "action": "alert"
        },
        "multipleFailedLogins": {
          "threshold": 5,
          "timeWindow": "5m",
          "action": "block"
        }
      }
    }
  },
  "automation": {
    "healthChecks": {
      "endpoints": [
        {
          "url": "https://marketplace-backend-prod.azurewebsites.net/health",
          "expectedStatus": 200,
          "timeout": 5000,
          "interval": "30s"
        },
        {
          "url": "https://marketplace-frontend.azurestaticapps.net",
          "expectedStatus": 200,
          "timeout": 10000,
          "interval": "1m"
        }
      ]
    },
    "autoScaling": {
      "rules": [
        {
          "metric": "CPU",
          "threshold": 70,
          "action": "scaleOut",
          "cooldown": "5m"
        },
        {
          "metric": "Memory", 
          "threshold": 80,
          "action": "scaleOut",
          "cooldown": "5m"
        },
        {
          "metric": "ResponseTime",
          "threshold": 3000,
          "action": "scaleOut",
          "cooldown": "3m"
        }
      ]
    },
    "deployment": {
      "blueGreen": {
        "enabled": true,
        "healthCheckUrl": "/health",
        "rollbackThreshold": 5
      },
      "canary": {
        "enabled": false,
        "percentage": 10,
        "duration": "10m"
      }
    }
  }
}